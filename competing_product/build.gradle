apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

def getVersionNumber() {
	def Properties versionProps = new Properties()
	def versionPropsFile = file('version.properties')
	def code = 0
	def writer = null
	def result = code

	if (versionPropsFile.exists()) {
		def fis = new FileInputStream(versionPropsFile)
		versionProps.load(fis)
		fis.close()
		if (versionProps['VERSION']) {
			code = versionProps['VERSION'].toInteger() + 1
		}
	}
	
	result = sprintf('%04d', code)
	versionProps['VERSION'] = code.toString()
	writer = versionPropsFile.newWriter()
	versionProps.store(writer, null)
	writer.close()
	
	return result
}


targetCompatibility = 1.8
sourceCompatibility = 1.8
version = '1.0.0.' + getVersionNumber()
mainClassName = 'fi.phz.cib.WebApplication'

jar {
	baseName = 'competing-image-bank'
}

repositories {
    jcenter()
}

def SPRING = "1.3.3.RELEASE"

dependencies {
	
	// Compile
	compile("org.springframework.boot:spring-boot-starter-web:$SPRING")
	compile("org.springframework.boot:spring-boot-starter-cache:$SPRING")
	compile("org.springframework.boot:spring-boot-starter-log4j:$SPRING") {
		exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	}
	compile("jmagick:jmagick:6.6.9")
	compile("com.google.guava:guava:19.0")

	// Test compile
    testCompile("junit:junit:4.12")
	testCompile("org.springframework.boot:spring-boot-starter-test:$SPRING")
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
	test {
		java {
			srcDir 'src/test/java'
		}
		resources {
			srcDir 'src/test/resources'
		}
	}
}

